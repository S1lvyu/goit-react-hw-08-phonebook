{"version":3,"file":"static/js/987.38729cbf.chunk.js","mappings":"mZASe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACD,UAATd,EACFH,EAASiB,GACS,aAATd,EACTD,EAAYe,GACM,SAATd,GACTC,EAAQa,EAEX,EAEKC,EAAY,mCAAG,WAAMH,GAAN,wEACnBA,EAAMI,iBADa,kBAGXZ,GACJa,EAAAA,EAAAA,IAAa,CAAEjB,KAAMA,EAAMJ,MAAOA,EAAOE,SAAUA,KAJpC,OAMbW,IACFS,MAAM,kDACNrB,EAAS,KARM,gDAWjBsB,QAAQV,MAAR,MACAS,MAAM,wCAZW,yDAAH,sDAkBlB,OAHAE,EAAAA,EAAAA,YAAU,WACJd,GAAQJ,EAAS,YACtB,GAAE,CAACI,EAAQJ,KAEV,SAACmB,EAAA,EAAD,CACEC,GAAI,CACFC,gBAAgB,OAAD,OAASC,EAAT,KACfC,OAAQ,QACRC,iBAAkB,YAClBC,eAAgB,SALpB,UAQE,UAACN,EAAA,EAAD,CACEO,UAAU,OACVN,GAAI,CACFO,QAAS,OACTC,cAAe,SACfC,IAAK,OACLC,OAAQ,OACRC,MAAO,SAETC,SAAUnB,EATZ,WAWE,SAACoB,EAAA,EAAD,CACEC,QAAQ,KACRd,GAAI,CACFe,SAAU,OACVC,WAAY,OACZC,UAAW,SACXC,MAAO,OACPC,UAAW,SAPf,SASC,cAGD,SAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,QACNR,QAAQ,WACRpC,KAAK,QACL6C,KAAK,QACL/B,MAAOlB,EACPkD,SAAUnC,EACVoC,UAAQ,KAEV,SAACL,EAAA,EAAD,CACEE,MAAM,OACNR,QAAQ,WACRpC,KAAK,OACL6C,KAAK,OACLC,SAAUnC,EACVoC,UAAQ,KAEV,SAACL,EAAA,EAAD,CACEE,MAAM,WACNR,QAAQ,WACRpC,KAAK,WACL6C,KAAK,WACLC,SAAUnC,EACVoC,UAAQ,KAEV,SAACC,EAAA,EAAD,CAAQH,KAAK,SAAST,QAAQ,YAA9B,SAA0C,cAG1C,UAACD,EAAA,EAAD,CAAYC,QAAQ,IAApB,UAAwB,iCACO,SAAC,KAAD,CAAMa,GAAG,SAAT,SAAkB,uBAKxD,C","sources":["components/Register/Register.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, TextField, Button, Typography } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getIsAuthenticated, getUserError } from 'redux/selectors';\nimport { registerUser } from 'redux/operations';\nimport registerBackground from '../../images/register-background.jpg';\n\nexport default function Register() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isAuth = useSelector(getIsAuthenticated);\n  const error = useSelector(getUserError);\n  const handleChangeInput = event => {\n    const { name, value } = event.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    } else if (name === 'name') {\n      setName(value);\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await dispatch(\n        registerUser({ name: name, email: email, password: password })\n      );\n      if (error) {\n        alert('This email address is used for another account');\n        setEmail('');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Registration error! Please try again');\n    }\n  };\n  useEffect(() => {\n    if (isAuth) navigate('/contacts');\n  }, [isAuth, navigate]);\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${registerBackground})`,\n        height: '100vh',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n      }}\n    >\n      <Box\n        component=\"form\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '20px',\n          margin: 'auto',\n          width: '300px',\n        }}\n        onSubmit={handleSubmit}\n      >\n        <Typography\n          variant=\"h1\"\n          sx={{\n            fontSize: '30px',\n            fontWeight: 'bold',\n            textAlign: 'center',\n            color: 'blue',\n            marginTop: '100px',\n          }}\n        >\n          Register\n        </Typography>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={handleChangeInput}\n          required\n        />\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          name=\"name\"\n          type=\"name\"\n          onChange={handleChangeInput}\n          required\n        />\n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          name=\"password\"\n          type=\"password\"\n          onChange={handleChangeInput}\n          required\n        />\n        <Button type=\"submit\" variant=\"contained\">\n          Register\n        </Button>\n        <Typography variant=\"p\">\n          You already have an account? <Link to=\"/login\">Click here!</Link>\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["Register","useState","email","setEmail","password","setPassword","name","setName","navigate","useNavigate","dispatch","useDispatch","isAuth","useSelector","getIsAuthenticated","error","getUserError","handleChangeInput","event","target","value","handleSubmit","preventDefault","registerUser","alert","console","useEffect","Box","sx","backgroundImage","registerBackground","height","backgroundRepeat","backgroundSize","component","display","flexDirection","gap","margin","width","onSubmit","Typography","variant","fontSize","fontWeight","textAlign","color","marginTop","TextField","id","label","type","onChange","required","Button","to"],"sourceRoot":""}