{"version":3,"file":"static/js/797.23fa7805.chunk.js","mappings":"iVAQe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACD,UAATD,EACFN,EAASO,GACS,aAATD,GACTJ,EAAYK,EAEf,EACKC,EAAY,mCAAG,WAAMJ,GAAN,wEACnBA,EAAMK,iBADa,kBAIXlB,GAASmB,EAAAA,EAAAA,IAAU,CAAEX,MAAOA,EAAOE,SAAUA,KAJlC,OAMbL,IACFe,MAAM,8BACNX,EAAS,IACTE,EAAY,KATG,gDAYjBU,QAAQhB,MAAR,MACAe,MAAM,sCAbW,yDAAH,sDAmBlB,OAHAE,EAAAA,EAAAA,YAAU,WACJpB,GAAQJ,EAAS,YACtB,GAAE,CAACI,EAAQJ,KAEV,UAAC,IAAD,CACEyB,UAAU,OACVC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,IAAK,OACLC,OAAQ,OACRC,MAAO,SAETC,SAAUb,EATZ,WAWE,SAAC,IAAD,CACEc,QAAQ,KACRP,GAAI,CACFQ,SAAU,OACVC,WAAY,OACZC,UAAW,SACXC,MAAO,OACPC,UAAW,SAPf,SASC,WAGD,SAAC,IAAD,CACEC,MAAM,QACNN,QAAQ,WACRhB,KAAK,QACLuB,KAAK,QACLtB,MAAOR,EACP+B,SAAU3B,KAEZ,SAAC,IAAD,CACEyB,MAAM,WACNN,QAAQ,WACRhB,KAAK,WACLuB,KAAK,WACLtB,MAAON,EACP6B,SAAU3B,KAEZ,SAAC,IAAD,CAAQ0B,KAAK,SAASP,QAAQ,YAA9B,SAA0C,WAG1C,UAAC,IAAD,CAAYA,QAAQ,IAApB,UAAwB,+BACK,SAAC,KAAD,CAAMS,GAAG,YAAT,SAAqB,qBAIvD,C","sources":["components/Login/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, TextField, Button, Typography } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getIsAuthenticated, getUserError } from 'redux/selectors';\nimport { loginUser } from 'redux/operations';\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isAuth = useSelector(getIsAuthenticated);\n  const error = useSelector(getUserError);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleChangeInput = event => {\n    const { name, value } = event.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await dispatch(loginUser({ email: email, password: password }));\n\n      if (error) {\n        alert('Wrong username or password');\n        setEmail('');\n        setPassword('');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Logging in error! Please try again');\n    }\n  };\n  useEffect(() => {\n    if (isAuth) navigate('/contacts');\n  }, [isAuth, navigate]);\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '20px',\n        margin: 'auto',\n        width: '300px',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Typography\n        variant=\"h1\"\n        sx={{\n          fontSize: '30px',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          color: 'blue',\n          marginTop: '100px',\n        }}\n      >\n        Login\n      </Typography>\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        name=\"email\"\n        type=\"email\"\n        value={email}\n        onChange={handleChangeInput}\n      />\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        name=\"password\"\n        type=\"password\"\n        value={password}\n        onChange={handleChangeInput}\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        Login\n      </Button>\n      <Typography variant=\"p\">\n        You don't have an account? <Link to=\"/register\">Click here!</Link>\n      </Typography>\n    </Box>\n  );\n}\n"],"names":["Login","navigate","useNavigate","dispatch","useDispatch","isAuth","useSelector","getIsAuthenticated","error","getUserError","useState","email","setEmail","password","setPassword","handleChangeInput","event","target","name","value","handleSubmit","preventDefault","loginUser","alert","console","useEffect","component","sx","display","flexDirection","gap","margin","width","onSubmit","variant","fontSize","fontWeight","textAlign","color","marginTop","label","type","onChange","to"],"sourceRoot":""}